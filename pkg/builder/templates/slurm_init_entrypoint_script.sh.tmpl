#!/bin/sh

set -o errexit
set -o nounset
set -o pipefail
set -x

mkdir -p {{.EnvsPath}}

job_id=$(expr $JOB_COMPLETION_INDEX + {{.SlurmFirstJobID}})

cat << EOF > {{.EnvsPath}}/{{.SlurmEnvFilename}}
SLURM_CPUS_PER_TASK={{.SlurmCPUsPerTask}}
SLURM_CPUS_ON_NODE={{.SlurmCPUsOnNode}}
SLURM_JOB_CPUS_PER_NODE={{.SlurmJobCPUsPerNode}}
SLURM_CPUS_PER_GPU={{.SlurmCPUsPerGPU}}
SLURM_MEM_PER_CPU={{.SlurmMemPerCPU}}
SLURM_MEM_PER_GPU={{.SlurmMemPerGPU}}
SLURM_MEM_PER_NODE={{.SlurmMemPerNode}}
SLURM_GPUS={{.SlurmGPUs}}

SLURM_TASKS_PER_NODE={{.SlurmTasksPerNode}}
SLURM_NTASKS={{.SlurmNTasks}}
SLURM_NTASKS_PER_NODE={{.SlurmNTasksPerNode}}
SLURM_NPROCS={{.SlurmNTasks}}
SLURM_JOB_NUM_NODES={{.SlurmJobNumNodes}}
SLURM_NNODES={{.SlurmJobNumNodes}}

SLURM_SUBMIT_DIR={{.SlurmSubmitDir}}
SLURM_SUBMIT_HOST=$HOSTNAME

SLURM_JOB_NODELIST={{.SlurmJobNodeList}}
SLURM_JOB_FIRST_NODE={{.SlurmJobFirstNode}}

SLURM_JOB_ID=$job_id
SLURM_JOBID=$job_id
EOF
{{- if .ArrayJob}}

array_indexes="{{.ArrayIndexes}}"
array_task_id=$(echo "$array_indexes" | awk -F',' -v idx="$JOB_COMPLETION_INDEX" '{print $((idx + 1))}')

cat << EOF >> {{.EnvsPath}}/{{.SlurmEnvFilename}}
SLURM_ARRAY_JOB_ID={{.SlurmFirstJobID}}
SLURM_ARRAY_TASK_ID=$array_task_id
SLURM_ARRAY_TASK_COUNT={{.SlurmArrayTaskCount}}
SLURM_ARRAY_TASK_MAX={{.SlurmArrayTaskMax}}
SLURM_ARRAY_TASK_MIN={{.SlurmArrayTaskMin}}
SLURM_ARRAY_TASK_STEP={{.SlurmArrayTaskStep}}
EOF
{{- end}}
{{- if .FirstNodeIP}}

if [[ "$JOB_COMPLETION_INDEX" -eq 0 ]]; then
  echo "SLURM_JOB_FIRST_NODE_IP=${POD_IP}" >> {{.EnvsPath}}/{{.SlurmEnvFilename}}
else
  timeout={{.FirstNodeIPTimeoutSeconds}}
  start_time=$(date +%s)
  while true; do
    ip=$(nslookup "{{.SlurmJobFirstNode}}" | grep "Address 1" | awk 'NR==2 {print $3}') || true
    if [[ -n "$ip" ]]; then
      echo "SLURM_JOB_FIRST_NODE_IP=$ip" >> {{.EnvsPath}}/{{.SlurmEnvFilename}}
      break
    else
      current_time=$(date +%s)
      elapsed_time=$((current_time - start_time))
      if [ "$elapsed_time" -ge "$timeout" ]; then
        echo "Timeout reached, IP address for the first node ({{.SlurmJobFirstNode}}) not found."
        break
      fi
      echo "IP Address for the first node ({{.SlurmJobFirstNode}}) not found, retrying..."
      sleep 1
    fi
  done
fi
{{- end}}
